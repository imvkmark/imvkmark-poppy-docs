import{_ as n,o as s,c as a,b as p}from"./app.d1bf96cf.js";const t={},e=p(`<h1 id="\u670D\u52A1\u548C\u94A9\u5B50" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u548C\u94A9\u5B50" aria-hidden="true">#</a> \u670D\u52A1\u548C\u94A9\u5B50</h1><p>\u670D\u52A1\u7684\u4F4D\u7F6E: <code>modules/{module}/configurations/services.yaml</code></p><p>hook \u4F4D\u7F6E: <code>modules/{module}/configurations/hooks.yaml</code></p><h2 id="\u670D\u52A1\u548C\u94A9\u5B50\u7684\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u548C\u94A9\u5B50\u7684\u6982\u5FF5" aria-hidden="true">#</a> \u670D\u52A1\u548C\u94A9\u5B50\u7684\u6982\u5FF5</h2><p>\u6211\u4EEC\u6765\u89E3\u91CA\u4E00\u4E0B service\uFF1A</p><ol><li>service \u662F\u591A\u4E2A module \u4E4B\u95F4\u6269\u5C55\u7684\u91CD\u8981\u65B9\u5F0F\u3002</li><li>\u6211\u4EEC\u5C06 service \u548C hook \u770B\u4F5C\u662F\u63D2\u69FD\u4E0E\u63D2\u5934\u7684\u5173\u7CFB\u3002\u4E00\u4E2A\u63D2\u69FD\u53EF\u4EE5\u63D2\u591A\u4E2A\u63D2\u5934\u3002</li><li>\u6BCF\u4E2A app \u4E0B\u90FD\u4F1A\u6709\u4E00\u4E2A service.yaml \u7684\u6587\u4EF6\uFF0C\u6765\u63CF\u8FF0\u672C app \u7684 service,\u3002</li></ol><h2 id="\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h2><h3 id="array-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#array-\u7C7B\u578B" aria-hidden="true">#</a> Array \u7C7B\u578B</h3><p><strong>\u5B9A\u4E49 service</strong></p><p>\u9996\u5148\u5728 services.yaml \u4E2D\u5B9A\u4E49\u5982\u4E0B\u5185\u5BB9</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">poppy.system.api_info</span><span class="token punctuation">:</span>
    <span class="token key atrule">title</span><span class="token punctuation">:</span> \u7CFB\u7EDF\u63A5\u53E3
    <span class="token key atrule">type</span><span class="token punctuation">:</span> array
    <span class="token key atrule">description</span><span class="token punctuation">:</span> \u7CFB\u7EDF\u4FE1\u606F\u63A5\u53E3\u8C03\u7528<span class="token punctuation">,</span> \u7CFB\u7EDF\u4FE1\u606F\u8FD4\u56DE\u7684\u7075\u6D3B\u6570\u636E
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>poppy.system.api_info</code> \u5206\u4E3A\u4E09\u4E2A\u90E8\u5206</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>poppy    : \u547D\u540D\u7A7A\u95F4
system   : \u6A21\u5757
api_info : \u81EA\u5B9A\u4E49\u540D\u79F0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5B9A\u4E49 hooks</strong></p><p>\u7136\u540E\u518D hooks.yaml \u6587\u4EF6\u4E2D,\u6CE8\u518C\u8C03\u7528 hook \u65B9\u6CD5, Hooks \u547D\u540D\u65B9\u5F0F\u63A8\u8350</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{\u6A21\u5757\u540D\u79F0}/Hooks/{\u5B9A\u4E49\u6A21\u5757}/{\u540D\u79F0}
{module}/Hooks/System/ApiInfo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;poppy.system.api_info&quot;</span>
  <span class="token key atrule">hooks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&#39;\\Poppy\\System\\Hooks\\System\\ApiInfo&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7F16\u5199\u5B9E\u73B0\u5BF9\u5E94\u7684 key()/data()\u65B9\u6CD5</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">ApiInfo</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;api&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;info&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C ServiceFactory \u7684 parse \u65B9\u6CD5</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">sys_hook</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;poppy.system.api_info&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;api&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;info&#39;</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="form" tabindex="-1"><a class="header-anchor" href="#form" aria-hidden="true">#</a> Form</h3><p>\u5B9A\u4E49 service, \u8FD9\u4E2A Service \u662F\u5355\u9009 \u9996\u5148\u518D services.yaml \u4E2D\u5B9A\u4E49\u5982\u4E0B\u5185\u5BB9</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">poppy.ad.place_selection</span><span class="token punctuation">:</span>
    <span class="token key atrule">title</span><span class="token punctuation">:</span> \u5E7F\u544A\u4F4D\u9009\u62E9
    <span class="token key atrule">type</span><span class="token punctuation">:</span> form
    <span class="token key atrule">description</span><span class="token punctuation">:</span> \u9009\u62E9\u5E7F\u544A\u4F4D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u518C hook \u65B9\u6CD5</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;poppy.ad.place_selection&quot;</span>
  <span class="token key atrule">builder</span><span class="token punctuation">:</span> <span class="token string">&#39;\\Poppy\\Ad\\Services\\Hooks\\AdPlaceSelection&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u73B0 builder \u65B9\u6CD5</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">builder</span><span class="token punctuation">(</span><span class="token variable">$params</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   <span class="token variable">$name</span>    <span class="token operator">=</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token variable">$value</span>   <span class="token operator">=</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token constant">null</span><span class="token punctuation">;</span>
   <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;options&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

   <span class="token variable">$options</span>  <span class="token operator">+=</span> <span class="token punctuation">[</span>
      <span class="token string single-quoted-string">&#39;class&#39;</span>       <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;layui-input&#39;</span><span class="token punctuation">,</span>
      <span class="token string single-quoted-string">&#39;placeholder&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;\u8BF7\u9009\u62E9\u5E7F\u544A\u4F4D&#39;</span><span class="token punctuation">,</span>
   <span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token variable">$places</span> <span class="token operator">=</span> <span class="token class-name static-context">AdPlace</span><span class="token operator">::</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Form</span><span class="token operator">::</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$places</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528\u6267\u884C</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">sys_hook</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;poppy.ad.place_selection&#39;</span><span class="token punctuation">,</span> <span class="token variable">$param</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">parse</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token variable">$params</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$service</span> <span class="token operator">=</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;module&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">services</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$service</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token constant">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$hooks</span> <span class="token operator">=</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;module&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hooks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;parse&#39;</span> <span class="token operator">.</span> <span class="token function">studly_case</span><span class="token punctuation">(</span><span class="token variable">$service</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function"><span class="token punctuation">\\</span>is_callable</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$this</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token variable">$method</span><span class="token punctuation">(</span><span class="token variable">$hooks</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token constant">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6-service" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6-service" aria-hidden="true">#</a> \u83B7\u53D6 service</h3><p>services \u65B9\u6CD5\u4E2D\u8C03\u7528 ModulesService \u53D1 initialize \u65B9\u6CD5\u4E2D,\u5BF9\u6BCF\u4E2A\u6A21\u5757\u4E0B\u7684 service \u7684\u914D\u7F6E\u8FDB\u884C\u4E86 key=&gt;value \u7684\u7F13\u5B58\u521D\u59CB\u5316\u64CD\u4F5C</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@return</span> <span class="token class-name">ModulesService</span>(
 */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">services</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">ModulesService</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">serviceRepo</span> <span class="token keyword">instanceof</span> <span class="token class-name">ModulesService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$collect</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">repository</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">enabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Module</span> <span class="token variable">$module</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$collect</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$collect</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token variable">$module</span><span class="token operator">-&gt;</span><span class="token function">slug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$module</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;services&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">serviceRepo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModulesService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">serviceRepo</span><span class="token operator">-&gt;</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token variable">$collect</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">serviceRepo</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * Initialize.
 * <span class="token keyword">@param</span> <span class="token class-name">Collection</span> <span class="token parameter">$data</span> \u96C6\u5408
 */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">initialize</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Collection</span> <span class="token variable">$data</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">items</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;poppy&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">remember</span><span class="token punctuation">(</span>
        <span class="token string single-quoted-string">&#39;modules.service&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">SysConfig</span><span class="token operator">::</span><span class="token constant">MIN_DEBUG</span><span class="token punctuation">,</span>
        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$items</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$items</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token variable">$items</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$items</span><span class="token operator">-&gt;</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u901A\u8FC7 get()\u65B9\u6CD5\u83B7\u53D6\u6307\u5B9A key \u7684\u76F8\u5173 service \u914D\u7F6E</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * Get a module by name.
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">mixed</span></span> <span class="token parameter">$name</span> name
 * <span class="token keyword">@return</span> <span class="token class-name">Module</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Module</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">repository</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@return</span> <span class="token class-name">Modules</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">repository</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Modules</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">repository</span> <span class="token keyword">instanceof</span> <span class="token class-name">Modules</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">repository</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Modules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$slugs</span>            <span class="token operator">=</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;poppy&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">enabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">repository</span><span class="token operator">-&gt;</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token variable">$slugs</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">repository</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u6CE8\u518C\u7684-hook-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u6CE8\u518C\u7684-hook-\u65B9\u6CD5" aria-hidden="true">#</a> \u83B7\u53D6\u6CE8\u518C\u7684 hook \u65B9\u6CD5</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$hooks</span> <span class="token operator">=</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;module&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hooks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@return</span> <span class="token class-name">ModulesHook</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">hooks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">ModulesHook</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">hooksRepo</span> <span class="token keyword">instanceof</span> <span class="token class-name">ModulesHook</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$collect</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">repository</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">enabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Module</span> <span class="token variable">$module</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$collect</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$collect</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token variable">$module</span><span class="token operator">-&gt;</span><span class="token function">slug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$module</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hooks&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">hooksRepo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModulesHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">hooksRepo</span><span class="token operator">-&gt;</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token variable">$collect</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">hooksRepo</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * Initialize.
 * <span class="token keyword">@param</span> <span class="token class-name">Collection</span> <span class="token parameter">$data</span> \u96C6\u5408
 */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">initialize</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Collection</span> <span class="token variable">$data</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">items</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;poppy&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">remember</span><span class="token punctuation">(</span>
        <span class="token string single-quoted-string">&#39;modules.hooks&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">SysConfig</span><span class="token operator">::</span><span class="token constant">MIN_DEBUG</span><span class="token punctuation">,</span>
        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$items</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$items</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token variable">$items</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$items</span><span class="token operator">-&gt;</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token variable">$data</span>    <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token variable">$service</span> <span class="token operator">=</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;module&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">services</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$service</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">&#39;array&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$data</span> <span class="token operator">+</span> <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;hooks&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$service</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">&#39;form&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$item</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;builder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6267\u884C\u76F8\u5E94\u7684-parsearray-parseform-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u76F8\u5E94\u7684-parsearray-parseform-\u65B9\u6CD5" aria-hidden="true">#</a> \u6267\u884C\u76F8\u5E94\u7684 parseArray /parseForm \u65B9\u6CD5</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$method</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;parse&#39;</span> <span class="token operator">.</span> <span class="token function">studly_case</span><span class="token punctuation">(</span><span class="token variable">$service</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function"><span class="token punctuation">\\</span>is_callable</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$this</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token variable">$method</span><span class="token punctuation">(</span><span class="token variable">$hooks</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">parseArray</span><span class="token punctuation">(</span><span class="token variable">$hooks</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$collect</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">collect</span><span class="token punctuation">(</span><span class="token variable">$hooks</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$hook</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$collect</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">class_exists</span><span class="token punctuation">(</span><span class="token variable">$hook</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token variable">$hook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$obj</span> <span class="token keyword">instanceof</span> <span class="token class-name">ServiceArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$collect</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$collect</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
                    <span class="token variable">$obj</span><span class="token operator">-&gt;</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token variable">$obj</span><span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token variable">$collect</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">parseForm</span><span class="token punctuation">(</span><span class="token variable">$builder</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">class_exists</span><span class="token punctuation">(</span><span class="token variable">$builder</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token variable">$builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$obj</span> <span class="token keyword">instanceof</span> <span class="token class-name">ServiceForm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$obj</span><span class="token operator">-&gt;</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528 hook \u5B9A\u4E49\u7684\u5BF9\u5E94\u7684\u65B9\u6CD5</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;api&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;info&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">builder</span><span class="token punctuation">(</span><span class="token variable">$params</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$name</span>    <span class="token operator">=</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$value</span>   <span class="token operator">=</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;value&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token constant">null</span><span class="token punctuation">;</span>
    <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token variable">$params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;options&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token variable">$options</span>  <span class="token operator">+=</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;class&#39;</span>       <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;layui-input&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;placeholder&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;\u8BF7\u9009\u62E9\u5E7F\u544A\u4F4D&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$places</span> <span class="token operator">=</span> <span class="token class-name static-context">AdPlace</span><span class="token operator">::</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Form</span><span class="token operator">::</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$places</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FD0\u884C\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u884C\u7ED3\u679C" aria-hidden="true">#</a> \u8FD0\u884C\u7ED3\u679C</h3><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token function">dump</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServiceFactory</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;system.api_info&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 *  array:2 [
 *      &quot;api&quot; =&gt; &quot;info&quot;
 *      &quot;api2&quot; =&gt; &quot;info2&quot;
 *  ]
 *
 */</span>


<span class="token function">dump</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServiceFactory</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ad.place_selection&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;abc&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Illuminate\\Support\\HtmlString {#619</span>
  <span class="token comment">#html: &quot;&lt;select class=&quot;layui-input&quot; name=&quot;abc&quot;&gt;&lt;option selected=&quot;selected&quot; value=&quot;&quot;&gt;\u8BF7\u9009\u62E9\u5E7F\u544A\u4F4D&lt;/option&gt;&lt;option value=&quot;4&quot;&gt;\u4E1C\u57CE\u533A&lt;/option&gt;&lt;option value=&quot;5&quot;&gt;\u5317\u4EAC\u5E02&lt;/option&gt;&lt;option value=&quot;7&quot;&gt;\u8F6E\u64AD\u56FE&lt;/option&gt;&lt;/select&gt;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,52),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","hook.html.vue"]]);export{r as default};
